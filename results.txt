emulator:
range105_method1_dummy_aloss: loss: 0.2263 - accuracy: 0.6446 - val_loss: 0.2312 - val_accuracy: 0.6430
loss: 0.2276 - accuracy: 0.5694 - val_loss: 0.2303 - val_accuracy: 0.5782
r_2: 0.009706210955092637
r_2 for test: -0.021554710464418952

range105_method2_dummy_aloss: loss: 0.2303 - accuracy: 0.7249 - val_loss: 0.2312 - val_accuracy: 0.7309
r_2: 0.38876771486542905
r_2 for test: 0.3661298774132191

range105_method1_dummy_mse: loss: 0.1353 - accuracy: 0.8014 - val_loss: 0.1414 - val_accuracy: 0.7937
r_2: 0.7282675164458291
r_2 for test: 0.7296694943925417

range105_method1_nodummy_aloss: loss: 0.2320 - accuracy: 0.6946 - val_loss: 0.2336 - val_accuracy: 0.6931
r_2: 0.023917281508087168
r_2 for test: 0.02467168052281213

range103_method1_nodummy_aloss: loss: 0.3618 - accuracy: 0.5741 - val_loss: 0.3590 - val_accuracy: 0.5771
r_2: 0.3020419486478775

mean1_range = np.arange(0, 1001, 20)
mean2_range = np.arange(0, 1001, 20)
std_dev_range = np.arange(10, 101, 5)
range103_MDN2_method2: r_2: 0.7418327001195767
r_2 for test: 0.7416234116082676
very long, 4-5 hours

may not be trained very well
but range103_MDN3_method2 for plots and
mean1_range = np.arange(0, 1001, 50)
mean2_range = np.arange(0, 1001, 50)
std_dev_range = np.arange(10, 101, 10)


mean1_range = np.arange(0, 10001, 500)
mean2_range = np.arange(0, 10001, 500)
std_dev_range = np.arange(10, 1001, 100)
range104_MDN3_method2: r_2: 0.5723594720772736
r_2 for test: 0.5504588742798239

mean1_range = np.arange(0, 10001, 200)
mean2_range = np.arange(0, 10001, 200)
std_dev_range = np.arange(10, 1001, 50)
range104_MDN3_method1: r_2: 0.47607966111274236
r_2 for test: 0.48018136601903694

mean1_range = np.arange(0, 10001, 500)
mean2_range = np.arange(0, 10001, 500)
std_dev_range = np.arange(10, 1001, 100)
0.5120208316923136
0.46056595256512
